% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extra_eval.R
\name{extra_eval}
\alias{extra_eval}
\title{Measure model extrapolation}
\usage{
extra_eval(env_calib, env_proj, n_cores = 1, aggreg_factor = 1)
}
\arguments{
\item{env_calib}{SpatRaster with environmental conditions of the calibration area or the
presence and absence points localities used for constructing models}

\item{env_proj}{SpatRaster with environmental condition used for projecting a model (e.g., a bigger region, other region, or time period)}

\item{n_cores}{numeric. Number of cores use for parallelization. Default 1}

\item{aggreg_factor}{positive integer. Aggregation factor expressed as number of cells in each
direction to reduce raster resolution. Use value higher than 1 would be interesting when
measuring extrapolation with raster with a high number of cells. The resolution of output will be
the same as raster object used in 'env_proj' argument. Default 1, i.e., by default, no changes
will be made to the resolution of the environmental variables}
}
\value{
A SpatRaster object with extrapolation values measured in percentage
}
\description{
Measure extrapolation comparing data used for modeling calibration and area for
model projection. This function use the approach proposed by Velazco et al., in prep
}
\examples{
\dontrun{
require(dplyr)
require(terra)

data(spp)
f <- system.file("external/somevar.tif", package = "flexsdm")
somevar <- terra::rast(f)

spp$species \%>\% unique()
sp <- spp \%>\%
  dplyr::filter(species == "sp3", pr_ab == 1) \%>\%
  dplyr::select(x, y)

# Accessible area
ca <- calib_area(sp, x = "x", y = "y", method = c("buffer", width = 30000))

plot(somevar$CFP_1)
points(sp)
plot(ca, add = T)

# Get environmental condition of calibration area
somevar_ca <- somevar \%>\%
  crop(., ca) \%>\%
  mask(., ca)
plot(somevar_ca)

xp <-
  extra_eval(
    env_calib = somevar_ca,
    env_proj = somevar,
    n_cores = 1,
    aggreg_factor = 3
  )
plot(xp)
}
}
\seealso{
\code{\link{extra_exclude}}
}
