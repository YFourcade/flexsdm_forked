% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune_gbm.R
\name{tune_gbm}
\alias{tune_gbm}
\title{Fit and validate Generalized Boosted Regression models with exploration of hyper-parameters}
\usage{
tune_gbm(
  data,
  response,
  predictors,
  predictors_f = NULL,
  partition,
  grid = NULL,
  thr = NULL,
  metric = "TSS",
  ...
)
}
\arguments{
\item{data}{data.frame. Database with response (0,1) and predictors values.}

\item{response}{character. Column name with species absence-presence data (0,1).}

\item{predictors}{character. Vector with the column names of quantitative predictor variables (i.e. continuous or discrete variables). Usage predictors = c("aet", "cwd", "tmin")}

\item{predictors_f}{character. Vector with the column names of qualitative predictor variables (i.e. ordinal or nominal variables type). Usage predictors_f = c("landform")}

\item{partition}{character. Column name with training and validation partition groups.}

\item{grid}{data.frame. Provide a data frame object with algorithm hyper-parameters values to be tested. It Is recommended to generate this data.frame with grid() function. Hyper-parameters needed for tuning are 'n.trees', 'shrinkage', and 'n.minobsinnode'.}

\item{thr}{character. Threshold used to get binary suitability values (i.e. 0,1) useful for threshold-dependent performance metrics. It is possible not define a threshold or use more than one, in these cases, function will return the best model and the best threshold. It is necessary to provide a vector for this argument. The next threshold area available:
\itemize{
  \item lpt: The highest threshold at which there is no omission. Usage thr=c(type='lpt').
  \item equal_sens_spec: Threshold at which the sensitivity and specificity are equal (aka threshold that maximizes the TSS).
  \item max_sens_spec: Threshold at which the sum of the sensitivity and specificity is the highest.
  Usage thr=c(type='max_sens_spec').
  \item max_kappa: The threshold at which Kappa is the highest ("max kappa"). Usage thr=c(type='max_kappa').
  \item max_jaccard: The threshold at which Jaccard is the highest. Usage thr=c(type='max_jaccard').
  \item max_sorensen: The threshold at which Sorensen is highest. Usage thr=c(type='max_sorensen').
  \item max_fpb: The threshold at which FPB is highest. Usage thr=c(type='max_fpb').
  \item specific: A threshold value specified by user. Usage thr=c(type='specific', sens='0.6'). 'sens' refers to models will be binarized using this suitability value.
  }}

\item{metric}{character. Performance metric used for selecting the best combination of hyper-parameter values. Can be used one of the next metrics SORENSEN, JACCARD, FPB, TSS, KAPPA, AUC, and BOYCE. TSS is used as default.}
}
\value{
A list object with:
\itemize{
\item model: A "gbm" class object. This object can be used for predicting.
\item predictors: A character with quantitative (elements names with c) and qualitative (elements names with f) variables use for modeling.
\item tune_performance: Performance metric (see \code{\link{sdm_eval}}) for each combination of the hyper-parameters.
\item best_hyper_performance: Hyper-parameters values and performance metric (see \code{\link{sdm_eval}}) for the best hyper-parameters combination.
\item selected_thresholds: Value of the threshold selected.
\item all_thresholds: Value of all threshold.
}
}
\description{
Fit and validate Generalized Boosted Regression models with exploration of hyper-parameters
}
\examples{
\dontrun{
data(abies_db)
abies_db

# We will partition the data with the k-fold method

abies_db2 <- data_part(
  data = abies_db,
  pr_ab = "pr_ab",
  bg_data = NULL,
  bg_a = NULL,
  method = c(method = "kfold", folds = 10)
)

# pr_ab columns is species presence and absences (i.e. the response variable)
# from aet to landform are the predictors variables (landform is a qualitative variable)

# Hyper-parameter values for tuning
tune_grid <-
  expand.grid(
    n.trees = c(20, 50, 100, 200),
    shrinkage = c(0.1, 0.5, 1),
    n.minobsinnode = c(1, 3, 5, 7, 9)
  )

gbm_t <-
  tune_gbm(
    data = abies_db2,
    response = "pr_ab",
    predictors = c(
      "aet", "cwd", "tmin", "ppt_djf",
      "ppt_jja", "pH", "awc", "depth", "percent_clay"
    ),
    predictors_f = c("landform"),
    partition = ".part",
    grid = tune_grid,
    thr = "max_sens_spec",
    metric = "TSS",
  )

# Outputs
gbm_t$model
gbm_t$tune_performance
gbm_t$best_hyper
gbm_t$selected_thresholds
gbm_t$all_thresholds

# Graphical exploration of performance of each hyper-parameter setting
require(ggplot2)
ggplot(gbm_t$tune_performance, aes(n.minobsinnode, TSS_mean)) +
  geom_point(aes(col = factor(n.trees)))

pg <- position_dodge(width = 0.5)
ggplot(gbm_t$tune_performance, aes(factor(n.minobsinnode),
  TSS_mean,
  col = factor(shrinkage)
)) +
  geom_errorbar(aes(ymin = TSS_mean - TSS_sd, ymax = TSS_mean + TSS_sd), width = 0.2, position = pg) +
  geom_point(position = pg) +
  geom_line(
    data = gbm_t$tune_performance,
    aes(as.numeric(factor(n.minobsinnode)),
      TSS_mean,
      col = factor(shrinkage)
    ), position = pg
  ) +
  facet_wrap(. ~ n.trees) +
  theme(legend.position = "bottom")
}

}
\seealso{
\code{\link{tune_mx}}, \code{\link{tune_nnet}}, \code{\link{tune_rf}}, and \code{\link{tune_svm}}.
}
