% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/env_filtering.R
\name{env_filtering}
\alias{env_filtering}
\title{Function to perform environmental filtering of species occurrence records}
\usage{
env_filtering(data, x, y, id, variables, nbins, cores = 1)
}
\arguments{
\item{data}{data.frame. Data.frame or tibble object with presences
(or presence-absence) records, and coordinates}

\item{x}{character. Column name with longitude data}

\item{y}{character. Column name with latitude data}

\item{id}{character. Column names with rows id. It is important that each row has its own unique code.}

\item{variables}{SpatRaste. Rasters with environmental conditions}

\item{nbins}{integer. A number of classes used to split each environmental condition}

\item{cores}{integer. Number of machine cores used for processing in parallel}
}
\value{
A tibble object with filtered data
}
\description{
Function to perform environmental filtering of species occurrence records
}
\examples{
\dontrun{
require(terra)
require(dplyr)

# Envirnomental variables
somevar <- system.file("external/somevar.tif", package = "flexsdm")
somevar <- terra::rast(somevar)

plot(somevar)

# Species occurrences
data("spp")
spp
spp1 <- spp \%>\% dplyr::filter(species == "sp1", pr_ab == 1)

somevar[[1]] \%>\% plot()
points(spp1 \%>\% select(x, y))

spp1$idd <- 1:nrow(spp1)


# 5 bins
filtered_1 <- env_filtering(
  data = spp1,
  x = "x",
  y = "y",
  id = "idd",
  variables = somevar,
  nbins = 5,
  cores = 1
)

# 8 bins
filtered_2 <- env_filtering(
  data = spp1,
  x = "x",
  y = "y",
  id = "idd",
  variables = somevar,
  nbins = 8,
  cores = 1
)

# 12 bins
filtered_3 <- env_filtering(
  data = spp1,
  x = "x",
  y = "y",
  id = "idd",
  variables = somevar,
  nbins = 12,
  cores = 1
)
# note that while higher the nbins parameter higher the number of
# classes to be processed (4 variables, 30 bins = 923521 classes)

# While higher the number of bins smaller the number of records retained
}
}
