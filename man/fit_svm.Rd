% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_svm.R
\name{fit_svm}
\alias{fit_svm}
\title{Fit and validate Support Vector Machine models}
\usage{
fit_svm(
  data,
  response,
  predictors,
  predictors_f = NULL,
  fit_formula = NULL,
  partition,
  thr = NULL,
  sigma = "automatic",
  C = 1
)
}
\arguments{
\item{data}{data.frame. Database with response (0,1) and predictors values.}

\item{response}{character. Column name with species absence-presence data (0,1).}

\item{predictors}{character. Vector with the column names of quantitative
predictor variables (i.e. continuous variables).
Usage predictors = c("aet", "cwd", "tmin")}

\item{predictors_f}{character. Vector with the column names of qualitative
predictor variables (i.e. ordinal or nominal variables type). Usage predictors_f = c("landform")}

\item{fit_formula}{formula. A formula object with response and predictor
variables (e.g. formula(pr_ab ~ aet + ppt_jja + pH + awc + depth + landform)).
Note that the variables used here must be consistent with those used in
response, predictors, and predictors_f arguments}

\item{partition}{character. Column name with training and validation partition groups.}

\item{thr}{character. Threshold used to get binary suitability values (i.e. 0,1). It is useful for threshold-dependent performance metrics. It is possible to use more than one threshold type. It is necessary to provide a vector for this argument. The next threshold area available:
\itemize{
  \item lpt: The highest threshold at which there is no omission.
  \item equal_sens_spec: Threshold at which the sensitivity and specificity are equal.
  \item max_sens_spec: Threshold at which the sum of the sensitivity and specificity is the highest (aka threshold that maximizes the TSS).
  \item max_jaccard: The threshold at which Jaccard is the highest.
  \item max_sorensen: The threshold at which Sorensen is highest.
  \item max_fpb: The threshold at which FPB is highest.
  \item sensitivity: Threshold based on a specified sensitivity value.
  Usage thr = c('sensitivity', sens='0.6') or thr = c('sensitivity'). 'sens' refers to sensitivity value. If it is not specified a sensitivity values, function will use by default 0.9
  }
In the case of use more than one threshold type it is necessary concatenate threshold types, e.g., thr=c('lpt', 'max_sens_spec', 'max_jaccard'), or thr=c('lpt', 'max_sens_spec', 'sensitivity', sens='0.8'), or thr=c('lpt', 'max_sens_spec', 'sensitivity'). Function will use all thresholds if no threshold is specified}

\item{sigma}{numeric. Inverse kernel width for the Radial Basis kernel function "rbfdot".
Default "automatic".}

\item{C}{numeric. Cost of constraints violation this is the 'C'-constant of the regularization
term in the Lagrange formulation. Default 1}
}
\value{
A list object with:
\itemize{
\item model: A "ksvm" class object. This object can be used for predicting.
\item predictors: A tibble with quantitative (c colum names) and qualitative (f colum names) variables use for modeling.
\item performance: Performance metric (see \code{\link{sdm_eval}}).
Those threshold dependent metric are calculated based on the threshold specified in thr argument .
\item selected_thresholds: Value of the threshold selected.
\item all_thresholds: Value of all threshold.
}
}
\description{
Fit and validate Support Vector Machine models
}
\details{
This function constructs 'C-svc' classification type and uses
Radial Basis kernel "Gaussian" function (rbfdot). See details details in \link[kernlab]{ksvm}.
}
\examples{
\dontrun{
data("abies_db")

# Using k-fold partition method
abies_db2 <- part_random(
  data = abies_db,
  pr_ab = "pr_ab",
  method = c(method = "kfold", folds = 10)
)
abies_db2

svm_t1 <- fit_svm(
  data = abies_db2,
  response = "pr_ab",
  predictors = c("aet", "ppt_jja", "pH", "awc", "depth"),
  predictors_f = c("landform"),
  partition = ".part",
  thr = c("max_sens_spec", "equal_sens_spec", "mas_sorensen"),
  fit_formula = NULL
)

svm_t1$model
svm_t1$performance
svm_t1$selected_thresholds
svm_t1$all_thresholds

# Using bootstrap partition method and only with presence-absence
# and get performance for several method
abies_db2 <- part_random(
  data = abies_db,
  pr_ab = "pr_ab",
  method = c(method = "boot", replicates = 10, proportion = 0.7)
)
abies_db2

svm_t2 <- fit_svm(
  data = abies_db2,
  response = "pr_ab",
  predictors = c("aet", "ppt_jja", "pH", "awc", "depth"),
  predictors_f = c("landform"),
  partition = ".part",
  thr = c("max_sens_spec", "equal_sens_spec", "mas_sorensen"),
  fit_formula = NULL
)
svm_t2
}

}
